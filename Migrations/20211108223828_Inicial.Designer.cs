// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P2_Aplicada1_PedroSolorin_2018_0613.DAL;

namespace P2_Aplicada1_PedroSolorin_2018_0613.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20211108223828_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("P2_Aplicada1_PedroSolorin_2018_0613.Entidades.ProyectoDetalle", b =>
                {
                    b.Property<int>("ProyectosDetalleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProyectoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TareaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProyectosDetalleId");

                    b.HasIndex("ProyectoId");

                    b.HasIndex("TareaId");

                    b.ToTable("ProyectoDetalle");
                });

            modelBuilder.Entity("P2_Aplicada1_PedroSolorin_2018_0613.Entidades.Proyectos", b =>
                {
                    b.Property<int>("ProyectoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.HasKey("ProyectoId");

                    b.ToTable("Proyectos");
                });

            modelBuilder.Entity("P2_Aplicada1_PedroSolorin_2018_0613.Entidades.TiposTareas", b =>
                {
                    b.Property<int>("TareaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Requerimiento")
                        .HasColumnType("TEXT");

                    b.Property<int>("Tiempo")
                        .HasColumnType("INTEGER");

                    b.HasKey("TareaId");

                    b.ToTable("Tareas");

                    b.HasData(
                        new
                        {
                            TareaId = 1,
                            Descripcion = "Analisis",
                            Requerimiento = "Analizar la opcion de clientes",
                            Tiempo = 120
                        },
                        new
                        {
                            TareaId = 2,
                            Descripcion = "Diseño",
                            Requerimiento = "Hacer un diseño excelente",
                            Tiempo = 60
                        },
                        new
                        {
                            TareaId = 3,
                            Descripcion = "Programacion",
                            Requerimiento = "Programar todo el registro",
                            Tiempo = 240
                        },
                        new
                        {
                            TareaId = 4,
                            Descripcion = "Prueba",
                            Requerimiento = "Probar con mucho cuidado",
                            Tiempo = 30
                        });
                });

            modelBuilder.Entity("P2_Aplicada1_PedroSolorin_2018_0613.Entidades.ProyectoDetalle", b =>
                {
                    b.HasOne("P2_Aplicada1_PedroSolorin_2018_0613.Entidades.Proyectos", null)
                        .WithMany("Detalles")
                        .HasForeignKey("ProyectoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P2_Aplicada1_PedroSolorin_2018_0613.Entidades.TiposTareas", "TiposTareas")
                        .WithMany()
                        .HasForeignKey("TareaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TiposTareas");
                });

            modelBuilder.Entity("P2_Aplicada1_PedroSolorin_2018_0613.Entidades.Proyectos", b =>
                {
                    b.Navigation("Detalles");
                });
#pragma warning restore 612, 618
        }
    }
}
